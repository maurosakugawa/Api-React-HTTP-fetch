{"ast":null,"code":"var _jsxFileName = \"/home/mauro/\\xC1rea de Trabalho/Projeto07-ReactHTTP-Reques/atv-react/src/Form.js\";\nimport React from 'react'; // import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n  constructor() {\n    super();\n\n    this.buscaCidades = e => {\n      this.setState({\n        nome: e.target.value\n      });\n      fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=cac`, {\n        method: \"GET\"\n      }, {\n        //  mode: 'no-cors',\n        method: 'GET',\n        headers: new Headers({\n          'Accept': 'application/xml',\n          'content-type': 'application/x-www-form-urlencoded',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, PUT',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        })\n      }).then(response => response.arrayBuffer()).then(buffer => {\n        let decoder = new TextDecoder(\"iso-8859-1\");\n        return decoder.decode(buffer);\n      }).then(str => {\n        // console.log(str);\n        let parser = new window.DOMParser();\n        let xml = parser.parseFromString(str, \"text/xml\");\n        let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n\n        let lista = [];\n        lista.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: \"1\",\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 24\n          }\n        }, \"Selecione uma cidade\"));\n        cidades.childNodes.forEach((obj, index) => {\n          lista.push( /*#__PURE__*/React.createElement(\"option\", {\n            key: index,\n            value: obj.childNodes[2].childNodes[0].nodeValue,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 28\n            }\n          }, obj.childNodes[0].childNodes[0].nodeValue, \" - \", obj.childNodes[1].childNodes[0].nodeValue));\n        });\n        this.setState({\n          cidades: lista\n        }); //        console.log('Cidades: ');\n      }).catch(erro => console.log(erro));\n    };\n\n    this.changeCidade = event => {};\n\n    this.state = {\n      cid: '',\n      nome: '',\n      cidades: '',\n      cidade: ''\n    };\n    var buscaCidades;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cid\",\n      value: this.state.cid,\n      onChange: e => this.setState({\n        nome: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, this.state.erroMsg)));\n  }\n\n}","map":{"version":3,"sources":["/home/mauro/Área de Trabalho/Projeto07-ReactHTTP-Reques/atv-react/src/Form.js"],"names":["React","Form","Component","constructor","buscaCidades","e","setState","nome","target","value","fetch","method","headers","Headers","then","response","arrayBuffer","buffer","decoder","TextDecoder","decode","str","parser","window","DOMParser","xml","parseFromString","cidades","getElementsByTagName","lista","push","childNodes","forEach","obj","index","nodeValue","catch","erro","console","log","changeCidade","event","state","cid","cidade","render","submit","erroMsg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,GAAG;AACV;;AADU,SAaVC,YAbU,GAaKC,CAAC,IAAI;AAChB,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADL,OAAd;AAKAC,MAAAA,KAAK,CAAE,yDAAF,EAA2D;AAACC,QAAAA,MAAM,EAAC;AAAR,OAA3D,EAA2E;AAChF;AACIA,QAAAA,MAAM,EAAE,KAFoE;AAG5EC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,oBAAU,iBADO;AAEjB,0BAAgB,mCAFC;AAGjB,yCAA+B,GAHd;AAIjB,0CAAgC,gBAJf;AAKjB,0CAAgC;AALf,SAAZ;AAHmE,OAA3E,CAAL,CAWHC,IAXG,CAWEC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,EAXd,EAYHF,IAZG,CAYEG,MAAM,IAAI;AACZ,YAAIC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,YAAhB,CAAd;AACA,eAAOD,OAAO,CAACE,MAAR,CAAeH,MAAf,CAAP;AACH,OAfG,EAgBHH,IAhBG,CAgBEO,GAAG,IAAI;AAAE;AACX,YAAIC,MAAM,GAAG,IAAIC,MAAM,CAACC,SAAX,EAAb;AACA,YAAIC,GAAG,GAAGH,MAAM,CAACI,eAAP,CAAuBL,GAAvB,EAA4B,UAA5B,CAAV;AACA,YAAIM,OAAO,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,SAAzB,EAAoC,CAApC,CAAd,CAHS,CAG6C;;AACtD,YAAIC,KAAK,GAAG,EAAZ;AACAA,QAAAA,KAAK,CAACC,IAAN,eAAW;AAAQ,UAAA,GAAG,EAAC,GAAZ;AAAgB,UAAA,KAAK,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAX;AACAH,QAAAA,OAAO,CAACI,UAAR,CAAmBC,OAAnB,CAA2B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvCL,UAAAA,KAAK,CAACC,IAAN,eAAW;AAAQ,YAAA,GAAG,EAAEI,KAAb;AAAoB,YAAA,KAAK,EAAED,GAAG,CAACF,UAAJ,CAAe,CAAf,EAAkBA,UAAlB,CAA6B,CAA7B,EAAgCI,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwEF,GAAG,CAACF,UAAJ,CAAe,CAAf,EAAkBA,UAAlB,CAA6B,CAA7B,EAAgCI,SAAxG,SAAsHF,GAAG,CAACF,UAAJ,CAAe,CAAf,EAAkBA,UAAlB,CAA6B,CAA7B,EAAgCI,SAAtJ,CAAX;AACH,SAFD;AAGA,aAAK7B,QAAL,CAAc;AAAEqB,UAAAA,OAAO,EAAEE;AAAX,SAAd,EATS,CAUjB;AACK,OA3BG,EA4BHO,KA5BG,CA4BGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CA5BX;AA8BP,KAjDa;;AAAA,SAmDdG,YAnDc,GAmDCC,KAAK,IAAI,CAEvB,CArDa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,EADI;AAETpC,MAAAA,IAAI,EAAE,EAFG;AAGToB,MAAAA,OAAO,EAAE,EAHA;AAITiB,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMA,QAAIxC,YAAJ;AACH;;AA8CDyC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,KAAxB;AAA8B,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,GAAhD;AACI,MAAA,QAAQ,EAAEtC,CAAC,IAAI,KAAKC,QAAL,CAAc;AACzBC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADU,OAAd,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKiC,KAAL,CAAWK,OADhB,CAXJ,CADJ,CADJ;AAoBJ;;AA9E8C","sourcesContent":["import React from 'react';\n// import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            cid: '',\n            nome: '',\n            cidades: '',\n            cidade: ''\n        };\n        var buscaCidades;\n    }\n\n\n\n        buscaCidades = e => {\n            this.setState({\n                nome: e.target.value\n            });\n\n\n            fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=cac`,{method:\"GET\"}, {\n            //  mode: 'no-cors',\n                method: 'GET',\n                headers: new Headers({\n                    'Accept': 'application/xml',\n                    'content-type': 'application/x-www-form-urlencoded',\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                    'Access-Control-Allow-Headers': 'Content-Type',\n            })\n        })\n        .then(response => response.arrayBuffer())\n        .then(buffer => {\n            let decoder = new TextDecoder(\"iso-8859-1\");\n            return decoder.decode(buffer);\n        })\n        .then(str => { // console.log(str);\n            let parser = new window.DOMParser()\n            let xml = parser.parseFromString(str, \"text/xml\");\n            let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n            let lista = [];\n            lista.push(<option key='1' value='' >Selecione uma cidade</option>)\n            cidades.childNodes.forEach((obj, index) => {\n                lista.push(<option key={index} value={obj.childNodes[2].childNodes[0].nodeValue} >{obj.childNodes[0].childNodes[0].nodeValue} - {obj.childNodes[1].childNodes[0].nodeValue}</option>)\n            });\n            this.setState({ cidades: lista});\n    //        console.log('Cidades: ');\n        })\n        .catch(erro => console.log(erro) );\n        \n    }    \n\n    changeCidade = event => {\n        \n    }\n\n    render() {\n\n        return (\n            <div>\n                <form onSubmit={this.submit} >\n                    <div>\n                        <label>Nome</label>\n                        <input type='text' name='cid' value={this.state.cid}\n                            onChange={e => this.setState({\n                                nome: e.target.value })\n                            }\n                        />\n\n\n                    </div>\n                    <div>\n                        {this.state.erroMsg}\n                    </div>\n                </form>\n\n            </div>\n        );\n   }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}