{"ast":null,"code":"var _jsxFileName = \"/home/mauro/\\xC1rea de Trabalho/Projeto07-ReactHTTP-Reques/src/Form.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport Async, { makeAsyncSelect } from 'react-select/async'; // import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      cidadeSelecionada: '',\n      listaCidades: [],\n      cidade: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${this.state.nome}`, {\n      method: \"GET\"\n    }, {\n      mode: 'no-cors',\n      method: 'GET',\n      headers: new Headers({\n        'Accept': 'application/xml',\n        'content-type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      })\n    }).then(response => response.arrayBuffer()).then(buffer => {\n      let decoder = new TextDecoder(\"iso-8859-1\");\n      return decoder.decode(buffer);\n    }).then(str => {\n      console.log(\"str: \" + str);\n      let parser = new window.DOMParser();\n      let xml = parser.parseFromString(str, \"text/xml\");\n      let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n\n      let lista = [];\n      cidades.childNodes.forEach((obj, index) => {\n        lista.push(obj.childNodes[0].childNodes[0].nodeValue);\n      }).then(this.setState(this.setState.cidade = lista));\n      console.log(\"lista: \" + lista);\n    }).catch(erro => console.log(erro));\n  }\n\n  render() {\n    return function () {\n      var options = [],\n          optionState = this.props.optionState;\n      this.props.options.forEach(function (option) {\n        var selected = optionState === option.value ? ' selected' : '';\n        options.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: option.value,\n          selected: selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }, option.label));\n      });\n    };\n  }\n\n}\n777777777777777777777777777777777777777777777777777;\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(`Option selected:`, selectedOption);\n    };\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/mauro/Área de Trabalho/Projeto07-ReactHTTP-Reques/src/Form.js"],"names":["React","Select","Async","makeAsyncSelect","Form","Component","constructor","state","nome","cidadeSelecionada","listaCidades","cidade","componentDidMount","fetch","method","mode","headers","Headers","then","response","arrayBuffer","buffer","decoder","TextDecoder","decode","str","console","log","parser","window","DOMParser","xml","parseFromString","cidades","getElementsByTagName","lista","childNodes","forEach","obj","index","push","nodeValue","setState","catch","erro","render","options","optionState","props","option","selected","value","label","App","selectedOption","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport Async, { makeAsyncSelect } from 'react-select/async';\n// import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            nome: '',\n            cidadeSelecionada: '',\n            listaCidades: [],\n            cidade: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${this.state.nome}`,{method:\"GET\"}, {\n            mode: 'no-cors',\n            method: 'GET',\n            headers: new Headers({\n                'Accept': 'application/xml',\n                'content-type': 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                'Access-Control-Allow-Headers': 'Content-Type',\n            })\n        })\n        .then(response => response.arrayBuffer())\n        .then(buffer => {\n            let decoder = new TextDecoder(\"iso-8859-1\");\n            return decoder.decode(buffer);\n        })\n        .then(str => { console.log(\"str: \" + str);\n            let parser = new window.DOMParser()\n            let xml = parser.parseFromString(str, \"text/xml\");\n            let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n            let lista = [];\n            cidades.childNodes.forEach((obj, index) => {\n                lista.push(obj.childNodes[0].childNodes[0].nodeValue)\n            })\n            .then(\n                this.setState(this.setState.cidade = lista)\n            )\n            console.log(\"lista: \" + lista);\n        })\n        .catch(erro => console.log(erro) );\n    }\n    \n\n    render() {\n        return (\n            function() {\n                var options = [],\n                    optionState = this.props.optionState;\n              \n                this.props.options.forEach(function(option) {\n                  var selected = (optionState === option.value) ? ' selected' : '';\n              \n                  options.push(\n                    <option value={option.value} selected={selected}>{option.label}</option>\n                  );\n                });\n            }  \n        );\n    }\n}\n\n\n777777777777777777777777777777777777777777777777777\n \nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' },\n];\n \nclass App extends React.Component {\n  state = {\n    selectedOption: null,\n  };\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  };\n  render() {\n    const { selectedOption } = this.state;\n \n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}