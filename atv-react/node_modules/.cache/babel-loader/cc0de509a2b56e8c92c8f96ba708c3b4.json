{"ast":null,"code":"var _jsxFileName = \"/home/mauro/\\xC1rea de Trabalho/Projeto07-ReactHTTP-Reques/src/Form.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport Async, { makeAsyncSelect } from 'react-select/async'; // import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(`Option selected:`, selectedOption);\n    };\n\n    this.state = {\n      nome: '',\n      cidadeSelecionada: '',\n      listaCidades: [],\n      selectedOption: null,\n      cidade: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${this.state.nome}`, {\n      method: \"GET\"\n    }, {\n      mode: 'no-cors',\n      method: 'GET',\n      headers: new Headers({\n        'Accept': 'application/xml',\n        'content-type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      })\n    }).then(response => response.arrayBuffer()).then(buffer => {\n      let decoder = new TextDecoder(\"iso-8859-1\");\n      return decoder.decode(buffer);\n    }).then(str => {\n      console.log(\"str: \" + str);\n      let parser = new window.DOMParser();\n      let xml = parser.parseFromString(str, \"text/xml\");\n      let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n\n      let lista = [];\n      cidades.childNodes.forEach((obj, index) => {\n        lista.push(obj.childNodes[0].childNodes[0].nodeValue);\n      }).then(this.setState(this.setState.cidade = lista));\n      console.log(\"lista: \" + lista);\n    }).catch(erro => console.log(erro));\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/mauro/Área de Trabalho/Projeto07-ReactHTTP-Reques/src/Form.js"],"names":["React","Select","Async","makeAsyncSelect","Form","Component","constructor","handleChange","selectedOption","setState","console","log","state","nome","cidadeSelecionada","listaCidades","cidade","componentDidMount","fetch","method","mode","headers","Headers","then","response","arrayBuffer","buffer","decoder","TextDecoder","decode","str","parser","window","DOMParser","xml","parseFromString","cidades","getElementsByTagName","lista","childNodes","forEach","obj","index","push","nodeValue","catch","erro","render","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,IAAgBC,eAAhB,QAAuC,oBAAvC,C,CACA;;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,GAAG;AACV;;AADU,SA4CdC,YA5Cc,GA4CCC,cAAc,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAb,EAAgCH,cAAhC;AACD,KA/CW;;AAEV,SAAKI,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,iBAAiB,EAAE,EAFV;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITP,MAAAA,cAAc,EAAE,IAJP;AAKTQ,MAAAA,MAAM,EAAE;AALC,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAE,uDAAsD,KAAKN,KAAL,CAAWC,IAAK,EAAxE,EAA0E;AAACM,MAAAA,MAAM,EAAC;AAAR,KAA1E,EAA0F;AAC3FC,MAAAA,IAAI,EAAE,SADqF;AAE3FD,MAAAA,MAAM,EAAE,KAFmF;AAG3FE,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,kBAAU,iBADO;AAEjB,wBAAgB,mCAFC;AAGjB,uCAA+B,GAHd;AAIjB,wCAAgC,gBAJf;AAKjB,wCAAgC;AALf,OAAZ;AAHkF,KAA1F,CAAL,CAWCC,IAXD,CAWMC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,EAXlB,EAYCF,IAZD,CAYMG,MAAM,IAAI;AACZ,UAAIC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,YAAhB,CAAd;AACA,aAAOD,OAAO,CAACE,MAAR,CAAeH,MAAf,CAAP;AACH,KAfD,EAgBCH,IAhBD,CAgBMO,GAAG,IAAI;AAAEpB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUmB,GAAtB;AACX,UAAIC,MAAM,GAAG,IAAIC,MAAM,CAACC,SAAX,EAAb;AACA,UAAIC,GAAG,GAAGH,MAAM,CAACI,eAAP,CAAuBL,GAAvB,EAA4B,UAA5B,CAAV;AACA,UAAIM,OAAO,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,SAAzB,EAAoC,CAApC,CAAd,CAHS,CAG6C;;AACtD,UAAIC,KAAK,GAAG,EAAZ;AACAF,MAAAA,OAAO,CAACG,UAAR,CAAmBC,OAAnB,CAA2B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvCJ,QAAAA,KAAK,CAACK,IAAN,CAAWF,GAAG,CAACF,UAAJ,CAAe,CAAf,EAAkBA,UAAlB,CAA6B,CAA7B,EAAgCK,SAA3C;AACH,OAFD,EAGCrB,IAHD,CAII,KAAKd,QAAL,CAAc,KAAKA,QAAL,CAAcO,MAAd,GAAuBsB,KAArC,CAJJ;AAMA5B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAY2B,KAAxB;AACH,KA5BD,EA6BCO,KA7BD,CA6BOC,IAAI,IAAIpC,OAAO,CAACC,GAAR,CAAYmC,IAAZ,CA7Bf;AA8BH;;AAODC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEvC,MAAAA;AAAF,QAAqB,KAAKI,KAAhC;AACA,wBACI,oBAAC,MAAD;AACA,MAAA,KAAK,EAAEJ,cADP;AAEA,MAAA,QAAQ,EAAE,KAAKD,YAFf;AAGA,MAAA,OAAO,EAAEyC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AA3D6C","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport Async, { makeAsyncSelect } from 'react-select/async';\n// import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            nome: '',\n            cidadeSelecionada: '',\n            listaCidades: [],\n            selectedOption: null,\n            cidade: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${this.state.nome}`,{method:\"GET\"}, {\n            mode: 'no-cors',\n            method: 'GET',\n            headers: new Headers({\n                'Accept': 'application/xml',\n                'content-type': 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                'Access-Control-Allow-Headers': 'Content-Type',\n            })\n        })\n        .then(response => response.arrayBuffer())\n        .then(buffer => {\n            let decoder = new TextDecoder(\"iso-8859-1\");\n            return decoder.decode(buffer);\n        })\n        .then(str => { console.log(\"str: \" + str);\n            let parser = new window.DOMParser()\n            let xml = parser.parseFromString(str, \"text/xml\");\n            let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n            let lista = [];\n            cidades.childNodes.forEach((obj, index) => {\n                lista.push(obj.childNodes[0].childNodes[0].nodeValue)\n            })\n            .then(\n                this.setState(this.setState.cidade = lista)\n            )\n            console.log(\"lista: \" + lista);\n        })\n        .catch(erro => console.log(erro) );\n    }\n    \n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n      };\n\n    render() {\n        const { selectedOption } = this.state;\n        return (\n            <Select\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n          /> \n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}