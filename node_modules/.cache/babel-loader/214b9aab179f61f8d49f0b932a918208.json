{"ast":null,"code":"var _jsxFileName = \"/home/mauro/\\xC1rea de Trabalho/Projeto07-ReactHTTP-Reques/atv-react/src/Form.js\";\nimport React from 'react'; // import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cid: '',\n      nome: '',\n      cidades: '',\n      cidade: ''\n    };\n  }\n  /*\n      componentDidMount() {\n          fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${this.state.nome}`,{method:\"GET\"}, {\n            //  mode: 'no-cors',\n              method: 'GET',\n              headers: new Headers({\n                  'Accept': 'application/xml',\n                  'content-type': 'application/x-www-form-urlencoded',\n                  'Access-Control-Allow-Origin': '*',\n                  'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                  'Access-Control-Allow-Headers': 'Content-Type',\n              })\n          })\n          .then(response => response.arrayBuffer())\n          .then(buffer => {\n              let decoder = new TextDecoder(\"iso-8859-1\");\n              return decoder.decode(buffer);\n          })\n          .then(str => { // console.log(str);\n              let parser = new window.DOMParser()\n              let xml = parser.parseFromString(str, \"text/xml\");\n              let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n  //            let cidade = xml.getElementsByTagName('cidade')[1]; // Obter a tag cidade\n              let nome = xml.getElementsByTagName('nome')[0]; // Obter a tag nome\n              let lista = [];\n              cidades.childNodes.forEach((obj, index) => {\n                  lista.push(obj.childNodes[0].childNodes[0].nodeValue)\n              });\n              console.log('Cidades: ');\n              for (var chave in cidades) console.log(cidades[chave]);\n  \n              console.log('Nome: ');\n              for (var chave in nome) console.log(nome[chave]);\n  //            console.log('Cidades: '+{cidades});\n  //            console.log('Cidade: '+cidade);\n  //            console.log('Nome: '+nome);\n          })\n          .catch(erro => console.log(erro) );\n      }\n  */\n\n\n  componentDidMount() {\n    //       if (e.target.value !== '') {\n    fetch(`http://servicos.cptec.inpe.br/XML/cidade/4963/previsao.xml)`, {\n      method: 'GET'\n    }).then(response => response.arrayBuffer()).then(buffer => {\n      let decoder = new TextDecoder(\"iso-8859-1\");\n      return decoder.decode(buffer);\n    }).then(temp => {\n      console.log(temp);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cid\",\n      value: this.state.cid,\n      onChange: e => this.setState({\n        nome: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, this.state.erroMsg)));\n  }\n\n}","map":{"version":3,"sources":["/home/mauro/Área de Trabalho/Projeto07-ReactHTTP-Reques/atv-react/src/Form.js"],"names":["React","Form","Component","constructor","state","cid","nome","cidades","cidade","componentDidMount","fetch","method","then","response","arrayBuffer","buffer","decoder","TextDecoder","decode","temp","console","log","render","submit","e","setState","target","value","erroMsg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,EADI;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCAC,EAAAA,iBAAiB,GAAG;AACnB;AAEWC,IAAAA,KAAK,CAAE,6DAAF,EAAgE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAhE,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAI;AACZ,UAAIC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,YAAhB,CAAd;AACA,aAAOD,OAAO,CAACE,MAAR,CAAeH,MAAf,CAAP;AACH,KALD,EAMCH,IAND,CAMMO,IAAI,IAAI;AAAGC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAmB,KANpC;AAOX;;AAEGG,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,KAAxB;AAA8B,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,GAAhD;AACI,MAAA,QAAQ,EAAEmB,CAAC,IAAI,KAAKC,QAAL,CAAc;AACzBnB,QAAAA,IAAI,EAAEkB,CAAC,CAACE,MAAF,CAASC;AADU,OAAd,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvB,KAAL,CAAWwB,OADhB,CAXJ,CADJ,CADJ;AAoBJ;;AArF8C","sourcesContent":["import React from 'react';\n// import Tabela from './Tabela';\n\nexport default class Form extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            cid: '',\n            nome: '',\n            cidades: '',\n            cidade: ''\n        };\n    }\n/*\n    componentDidMount() {\n        fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${this.state.nome}`,{method:\"GET\"}, {\n          //  mode: 'no-cors',\n            method: 'GET',\n            headers: new Headers({\n                'Accept': 'application/xml',\n                'content-type': 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                'Access-Control-Allow-Headers': 'Content-Type',\n            })\n        })\n        .then(response => response.arrayBuffer())\n        .then(buffer => {\n            let decoder = new TextDecoder(\"iso-8859-1\");\n            return decoder.decode(buffer);\n        })\n        .then(str => { // console.log(str);\n            let parser = new window.DOMParser()\n            let xml = parser.parseFromString(str, \"text/xml\");\n            let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n//            let cidade = xml.getElementsByTagName('cidade')[1]; // Obter a tag cidade\n            let nome = xml.getElementsByTagName('nome')[0]; // Obter a tag nome\n            let lista = [];\n            cidades.childNodes.forEach((obj, index) => {\n                lista.push(obj.childNodes[0].childNodes[0].nodeValue)\n            });\n            console.log('Cidades: ');\n            for (var chave in cidades) console.log(cidades[chave]);\n\n            console.log('Nome: ');\n            for (var chave in nome) console.log(nome[chave]);\n//            console.log('Cidades: '+{cidades});\n//            console.log('Cidade: '+cidade);\n//            console.log('Nome: '+nome);\n        })\n        .catch(erro => console.log(erro) );\n    }\n*/    \n\ncomponentDidMount() {\n //       if (e.target.value !== '') {\n\n            fetch(`http://servicos.cptec.inpe.br/XML/cidade/4963/previsao.xml)`, {method:'GET'})\n            .then(response => response.arrayBuffer())\n            .then(buffer => {\n                let decoder = new TextDecoder(\"iso-8859-1\");\n                return decoder.decode(buffer);\n            })\n            .then(temp => {  console.log(temp);})\n}    \n\n    render() {\n\n        return (\n            <div>\n                <form onSubmit={this.submit} >\n                    <div>\n                        <label>Nome</label>\n                        <input type='text' name='cid' value={this.state.cid}\n                            onChange={e => this.setState({\n                                nome: e.target.value })\n                            }\n                        />\n\n\n                    </div>\n                    <div>\n                        {this.state.erroMsg}\n                    </div>\n                </form>\n\n            </div>\n        );\n   }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}